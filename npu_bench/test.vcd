$date
	Fri May 12 23:29:09 2023
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module tb_systolic_array $end
$var wire 32 ! c9 [31:0] $end
$var wire 32 " c8 [31:0] $end
$var wire 32 # c7 [31:0] $end
$var wire 32 $ c6 [31:0] $end
$var wire 32 % c5 [31:0] $end
$var wire 32 & c4 [31:0] $end
$var wire 32 ' c3 [31:0] $end
$var wire 32 ( c2 [31:0] $end
$var wire 32 ) c1 [31:0] $end
$var reg 32 * a1 [31:0] $end
$var reg 32 + a2 [31:0] $end
$var reg 32 , a3 [31:0] $end
$var reg 32 - b1 [31:0] $end
$var reg 32 . b2 [31:0] $end
$var reg 32 / b3 [31:0] $end
$var reg 1 0 clk $end
$var reg 1 1 rst $end
$scope module dut1 $end
$var wire 32 2 a1 [31:0] $end
$var wire 32 3 a2 [31:0] $end
$var wire 32 4 a3 [31:0] $end
$var wire 32 5 b1 [31:0] $end
$var wire 32 6 b2 [31:0] $end
$var wire 32 7 b3 [31:0] $end
$var wire 1 0 clk $end
$var wire 1 1 rst $end
$var wire 32 8 c9 [31:0] $end
$var wire 32 9 c8 [31:0] $end
$var wire 32 : c7 [31:0] $end
$var wire 32 ; c6 [31:0] $end
$var wire 32 < c5 [31:0] $end
$var wire 32 = c4 [31:0] $end
$var wire 32 > c3 [31:0] $end
$var wire 32 ? c2 [31:0] $end
$var wire 32 @ c1 [31:0] $end
$var wire 32 A b69 [31:0] $end
$var wire 32 B b58 [31:0] $end
$var wire 32 C b47 [31:0] $end
$var wire 32 D b36 [31:0] $end
$var wire 32 E b25 [31:0] $end
$var wire 32 F b14 [31:0] $end
$var wire 32 G a89 [31:0] $end
$var wire 32 H a78 [31:0] $end
$var wire 32 I a56 [31:0] $end
$var wire 32 J a45 [31:0] $end
$var wire 32 K a23 [31:0] $end
$var wire 32 L a12 [31:0] $end
$scope module dut_mac1 $end
$var wire 1 0 clk $end
$var wire 32 M in_a [31:0] $end
$var wire 32 N in_b [31:0] $end
$var wire 1 1 rst $end
$var wire 32 O out_c [31:0] $end
$var reg 32 P out_a [31:0] $end
$var reg 32 Q out_b [31:0] $end
$var reg 64 R out_c_r [63:0] $end
$upscope $end
$scope module dut_mac2 $end
$var wire 1 0 clk $end
$var wire 32 S in_a [31:0] $end
$var wire 32 T in_b [31:0] $end
$var wire 1 1 rst $end
$var wire 32 U out_c [31:0] $end
$var reg 32 V out_a [31:0] $end
$var reg 32 W out_b [31:0] $end
$var reg 64 X out_c_r [63:0] $end
$upscope $end
$scope module dut_mac3 $end
$var wire 1 0 clk $end
$var wire 32 Y in_a [31:0] $end
$var wire 32 Z in_b [31:0] $end
$var wire 1 1 rst $end
$var wire 32 [ out_c [31:0] $end
$var reg 32 \ out_a [31:0] $end
$var reg 32 ] out_b [31:0] $end
$var reg 64 ^ out_c_r [63:0] $end
$upscope $end
$scope module dut_mac4 $end
$var wire 1 0 clk $end
$var wire 32 _ in_a [31:0] $end
$var wire 32 ` in_b [31:0] $end
$var wire 1 1 rst $end
$var wire 32 a out_c [31:0] $end
$var reg 32 b out_a [31:0] $end
$var reg 32 c out_b [31:0] $end
$var reg 64 d out_c_r [63:0] $end
$upscope $end
$scope module dut_mac5 $end
$var wire 1 0 clk $end
$var wire 32 e in_a [31:0] $end
$var wire 32 f in_b [31:0] $end
$var wire 1 1 rst $end
$var wire 32 g out_c [31:0] $end
$var reg 32 h out_a [31:0] $end
$var reg 32 i out_b [31:0] $end
$var reg 64 j out_c_r [63:0] $end
$upscope $end
$scope module dut_mac6 $end
$var wire 1 0 clk $end
$var wire 32 k in_a [31:0] $end
$var wire 32 l in_b [31:0] $end
$var wire 1 1 rst $end
$var wire 32 m out_c [31:0] $end
$var reg 32 n out_a [31:0] $end
$var reg 32 o out_b [31:0] $end
$var reg 64 p out_c_r [63:0] $end
$upscope $end
$scope module dut_mac7 $end
$var wire 1 0 clk $end
$var wire 32 q in_a [31:0] $end
$var wire 32 r in_b [31:0] $end
$var wire 1 1 rst $end
$var wire 32 s out_c [31:0] $end
$var reg 32 t out_a [31:0] $end
$var reg 32 u out_b [31:0] $end
$var reg 64 v out_c_r [63:0] $end
$upscope $end
$scope module dut_mac8 $end
$var wire 1 0 clk $end
$var wire 32 w in_a [31:0] $end
$var wire 32 x in_b [31:0] $end
$var wire 1 1 rst $end
$var wire 32 y out_c [31:0] $end
$var reg 32 z out_a [31:0] $end
$var reg 32 { out_b [31:0] $end
$var reg 64 | out_c_r [63:0] $end
$upscope $end
$scope module dut_mac9 $end
$var wire 1 0 clk $end
$var wire 32 } in_a [31:0] $end
$var wire 32 ~ in_b [31:0] $end
$var wire 1 1 rst $end
$var wire 32 !" out_c [31:0] $end
$var reg 32 "" out_a [31:0] $end
$var reg 32 #" out_b [31:0] $end
$var reg 64 $" out_c_r [63:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 $"
b0 #"
b0 ""
b0 !"
b0 ~
b0 }
b0 |
b0 {
b0 z
b0 y
b0 x
b0 w
b0 v
b0 u
b0 t
b0 s
b0 r
b0 q
b0 p
b0 o
b0 n
b0 m
b0 l
b0 k
b0 j
b0 i
b0 h
b0 g
b0 f
b0 e
b0 d
b0 c
b0 b
b0 a
b0 `
b0 _
b0 ^
b0 ]
b0 \
b0 [
b0 Z
b0 Y
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
11
10
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#50
00
01
#100
b1 )
b1 @
b1 O
b1 R
b1 F
b1 Q
b1 `
b1 L
b1 P
b1 S
10
b1 -
b1 5
b1 N
b1 *
b1 2
b1 M
#150
00
#200
b1001 )
b1001 @
b1001 O
b10 (
b10 ?
b10 U
b100 &
b100 =
b100 a
b1001 R
b100 F
b100 Q
b100 `
b10 L
b10 P
b10 S
b10 X
b10 E
b10 W
b10 f
b1 K
b1 V
b1 Y
b100 d
b1 C
b1 c
b1 r
b100 J
b100 b
b100 e
10
b10 .
b10 6
b10 T
b100 -
b100 5
b100 N
b100 +
b100 3
b100 _
b10 *
b10 2
b10 M
#250
00
#300
b111 #
b111 :
b111 s
b1000 %
b1000 <
b1000 g
b11000 &
b11000 =
b11000 a
b11 '
b11 >
b11 [
b1100 (
b1100 ?
b1100 U
b11110 )
b11110 @
b11110 O
b111 v
b1 u
b111 H
b111 t
b111 w
b1000 j
b10 B
b10 i
b10 x
b100 I
b100 h
b100 k
b11000 d
b100 C
b100 c
b100 r
b101 J
b101 b
b101 e
b11 ^
b11 D
b11 ]
b11 l
b1 \
b1100 X
b101 E
b101 W
b101 f
b10 K
b10 V
b10 Y
b11110 R
b111 F
b111 Q
b111 `
b11 L
b11 P
b11 S
10
b11 /
b11 7
b11 Z
b101 .
b101 6
b101 T
b111 -
b111 5
b111 N
b111 ,
b111 4
b111 q
b101 +
b101 3
b101 _
b11 *
b11 2
b11 M
#350
00
#400
b100100 (
b100100 ?
b100100 U
b1111 '
b1111 >
b1111 [
b1000010 &
b1000010 =
b1000010 a
b100001 %
b100001 <
b100001 g
b1100 $
b1100 ;
b1100 m
b100111 #
b100111 :
b100111 s
b1110 "
b1110 9
b1110 y
b0 F
b0 Q
b0 `
b0 L
b0 P
b0 S
b100100 X
b1000 E
b1000 W
b1000 f
b11 K
b11 V
b11 Y
b1111 ^
b110 D
b110 ]
b110 l
b10 \
b1000010 d
b111 C
b111 c
b111 r
b110 J
b110 b
b110 e
b100001 j
b101 B
b101 i
b101 x
b101 I
b101 h
b101 k
b1100 p
b11 A
b11 o
b11 ~
b100 n
b100111 v
b100 u
b1000 H
b1000 t
b1000 w
b1110 |
b10 {
b111 G
b111 z
b111 }
10
b110 /
b110 7
b110 Z
b1000 .
b1000 6
b1000 T
b0 -
b0 5
b0 N
b1000 ,
b1000 4
b1000 q
b110 +
b110 3
b110 _
b0 *
b0 2
b0 M
#450
00
#500
b10101 !
b10101 8
b10101 !"
b110110 "
b110110 9
b110110 y
b1100110 #
b1100110 :
b1100110 s
b101010 $
b101010 ;
b101010 m
b1010001 %
b1010001 <
b1010001 g
b101010 '
b101010 >
b101010 [
b10101 $"
b11 #"
b111 ""
b110110 |
b101 {
b1000 G
b1000 z
b1000 }
b1100110 v
b111 u
b1001 H
b1001 t
b1001 w
b101010 p
b110 A
b110 o
b110 ~
b101 n
b1010001 j
b1000 B
b1000 i
b1000 x
b110 I
b110 h
b110 k
b0 C
b0 c
b0 r
b0 J
b0 b
b0 e
b101010 ^
b1001 D
b1001 ]
b1001 l
b11 \
b0 E
b0 W
b0 f
b0 K
b0 V
b0 Y
10
b1001 /
b1001 7
b1001 Z
b0 .
b0 6
b0 T
b1001 ,
b1001 4
b1001 q
b0 +
b0 3
b0 _
#550
00
#600
b1100000 $
b1100000 ;
b1100000 m
b1111110 "
b1111110 9
b1111110 y
b1000101 !
b1000101 8
b1000101 !"
b0 D
b0 ]
b0 l
b0 \
b0 B
b0 i
b0 x
b0 I
b0 h
b0 k
b1100000 p
b1001 A
b1001 o
b1001 ~
b110 n
b0 u
b0 H
b0 t
b0 w
b1111110 |
b1000 {
b1001 G
b1001 z
b1001 }
b1000101 $"
b110 #"
b1000 ""
10
b0 /
b0 7
b0 Z
b0 ,
b0 4
b0 q
#650
00
#700
b10010110 !
b10010110 8
b10010110 !"
b10010110 $"
b1001 #"
b1001 ""
b0 {
b0 G
b0 z
b0 }
b0 A
b0 o
b0 ~
b0 n
10
#750
00
#800
b0 #"
b0 ""
10
#850
00
#900
10
#950
00
#1000
10
#1050
00
#1100
10
